#BlueJ class context
comment0.target=Room
comment0.text=\n\ A\ room\ in\ an\ adventure\ game.\n\n\ This\ class\ is\ part\ of\ the\ "Black\ Market\ Friday"\ application,\n\ a\ very\ simple,\ text\ based\ adventure\ game.\ \ \n\n\ A\ "Room"\ represents\ one\ location\ in\ the\ scenery\ of\ the\ game.\ \ It\ is\ \n\ connected\ to\ other\ rooms\ via\ exits.\ \ For\ each\ existing\ exit,\ the\ room\ \n\ stores\ a\ reference\ to\ the\ neighboring\ room.\n\ \n\ @author\ Julian\ Canepa\n\ @version\ April\ 7,\ 2021\n
comment1.params=description
comment1.target=Room(java.lang.String)
comment1.text=\n\ Create\ a\ room\ with\ a\ given\ description.\ Initially,\ it\ has\ no\ exits.\ \n\ @param\ description\ The\ room's\ description.\n
comment10.params=
comment10.target=java.lang.String\ getItemsDescription()
comment10.text=\n\ Return\ a\ string\ representation\ of\ the\ room's\ items\n\ or\ an\ empty\ string\ if\ the\ room\ has\ none.\n
comment11.params=
comment11.target=java.lang.String\ getDescription()
comment11.text=\n\ Return\ the\ room's\ description.\n
comment12.params=
comment12.target=java.lang.String\ getLongDescription()
comment12.text=\n\ Return\ a\ description\ of\ the\ room,\ it\ exits\ and\ contents.\n\ @return\ A\ detailed\ description\ of\ this\ room\n
comment13.params=
comment13.target=java.lang.String\ getExitDirections()
comment13.text=\n\ Return\ a\ string\ describing\ the\ room's\ available\ exit\ directions.\n\ @return\ Details\ of\ the\ room's\ exits.\n
comment14.params=direction
comment14.target=Room\ getExit(java.lang.String)
comment14.text=\n\ Return\ the\ room\ that\ is\ reached\ if\ we\ go\ from\ this\ room\ in\ the\ given\ direction.\n\ If\ there\ is\ no\ room\ in\ that\ direction,\ return\ null.\n\ @param\ direction\ The\ exit's\ direction.\n\ @return\ The\ room\ in\ the\ given\ direction.\n
comment15.params=direction
comment15.target=boolean\ hasExit(java.lang.String)
comment15.text=\n\ Return\ whether\ the\ room\ has\ an\ exit\ in\ the\ given\ direction.\n
comment2.params=direction\ neighbor
comment2.target=void\ setExit(java.lang.String,\ Room)
comment2.text=\n\ Define\ an\ exit\ from\ this\ room.\n\ @param\ direction\ The\ direction\ of\ the\ exit.\n\ @param\ neighbor\ \ The\ room\ to\ which\ the\ exit\ leads.\n
comment3.params=north\ east\ south\ west
comment3.target=void\ setExits(Room,\ Room,\ Room,\ Room)
comment3.text=\n\ Define\ the\ exits\ of\ this\ room.\n\ Every\ direction\ either\ leads\ to\ another\ room\ or\ is\ null\ (no\ door).\n\ \n\ @param\ north\ The\ north\ exit.\n\ @param\ east\ The\ east\ exit.\n\ @param\ south\ The\ south\ exit.\n\ @param\ west\ The\ west\ exit.\n
comment4.params=
comment4.target=boolean\ hasItems()
comment4.text=\n\ Return\ whether\ the\ room\ contains\ an\ item.\n
comment5.params=
comment5.target=int\ getItemCount()
comment5.text=\n\ Return\ the\ number\ of\ items\ in\ the\ room.\n
comment6.params=name\ price
comment6.target=void\ addItem(java.lang.String,\ int)
comment6.text=\n\ Place\ an\ item\ in\ the\ room.\n\ @param\ name\ The\ item's\ name.\n\ @param\ price\ The\ cost\ of\ the\ item\ in\ dollars.\n
comment7.params=item
comment7.target=void\ addItem(Item)
comment7.text=\n\ Place\ an\ item\ in\ the\ room.\n\ @param\ item\ The\ item\ to\ add.\n
comment8.params=index
comment8.target=Item\ removeItem(int)
comment8.text=\n\ Remove\ an\ item\ from\ the\ room.\n
comment9.params=
comment9.target=java.lang.String\ getItemsList()
comment9.text=\n\ Return\ a\ string\ listing\ all\ of\ the\ room's\ items.\n
numComments=16
